/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.5
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the QueueAutoscaler type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueueAutoscaler{}

// QueueAutoscaler Represents the autoscaling rules for a queue
type QueueAutoscaler struct {
	MinReplicas           int32  `json:"min_replicas"`
	MaxReplicas           int32  `json:"max_replicas"`
	DesiredQueueLength    int32  `json:"desired_queue_length"`
	PollingPeriod         *int32 `json:"polling_period,omitempty"`
	MaxUpscalePerMinute   *int32 `json:"max_upscale_per_minute,omitempty"`
	MaxDownscalePerMinute *int32 `json:"max_downscale_per_minute,omitempty"`
}

type _QueueAutoscaler QueueAutoscaler

// NewQueueAutoscaler instantiates a new QueueAutoscaler object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueueAutoscaler(minReplicas int32, maxReplicas int32, desiredQueueLength int32) *QueueAutoscaler {
	this := QueueAutoscaler{}
	this.MinReplicas = minReplicas
	this.MaxReplicas = maxReplicas
	this.DesiredQueueLength = desiredQueueLength
	return &this
}

// NewQueueAutoscalerWithDefaults instantiates a new QueueAutoscaler object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueueAutoscalerWithDefaults() *QueueAutoscaler {
	this := QueueAutoscaler{}
	return &this
}

// GetMinReplicas returns the MinReplicas field value
func (o *QueueAutoscaler) GetMinReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MinReplicas
}

// GetMinReplicasOk returns a tuple with the MinReplicas field value
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetMinReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MinReplicas, true
}

// SetMinReplicas sets field value
func (o *QueueAutoscaler) SetMinReplicas(v int32) {
	o.MinReplicas = v
}

// GetMaxReplicas returns the MaxReplicas field value
func (o *QueueAutoscaler) GetMaxReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxReplicas
}

// GetMaxReplicasOk returns a tuple with the MaxReplicas field value
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetMaxReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxReplicas, true
}

// SetMaxReplicas sets field value
func (o *QueueAutoscaler) SetMaxReplicas(v int32) {
	o.MaxReplicas = v
}

// GetDesiredQueueLength returns the DesiredQueueLength field value
func (o *QueueAutoscaler) GetDesiredQueueLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DesiredQueueLength
}

// GetDesiredQueueLengthOk returns a tuple with the DesiredQueueLength field value
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetDesiredQueueLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DesiredQueueLength, true
}

// SetDesiredQueueLength sets field value
func (o *QueueAutoscaler) SetDesiredQueueLength(v int32) {
	o.DesiredQueueLength = v
}

// GetPollingPeriod returns the PollingPeriod field value if set, zero value otherwise.
func (o *QueueAutoscaler) GetPollingPeriod() int32 {
	if o == nil || IsNil(o.PollingPeriod) {
		var ret int32
		return ret
	}
	return *o.PollingPeriod
}

// GetPollingPeriodOk returns a tuple with the PollingPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetPollingPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.PollingPeriod) {
		return nil, false
	}
	return o.PollingPeriod, true
}

// HasPollingPeriod returns a boolean if a field has been set.
func (o *QueueAutoscaler) HasPollingPeriod() bool {
	if o != nil && !IsNil(o.PollingPeriod) {
		return true
	}

	return false
}

// SetPollingPeriod gets a reference to the given int32 and assigns it to the PollingPeriod field.
func (o *QueueAutoscaler) SetPollingPeriod(v int32) {
	o.PollingPeriod = &v
}

// GetMaxUpscalePerMinute returns the MaxUpscalePerMinute field value if set, zero value otherwise.
func (o *QueueAutoscaler) GetMaxUpscalePerMinute() int32 {
	if o == nil || IsNil(o.MaxUpscalePerMinute) {
		var ret int32
		return ret
	}
	return *o.MaxUpscalePerMinute
}

// GetMaxUpscalePerMinuteOk returns a tuple with the MaxUpscalePerMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetMaxUpscalePerMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxUpscalePerMinute) {
		return nil, false
	}
	return o.MaxUpscalePerMinute, true
}

// HasMaxUpscalePerMinute returns a boolean if a field has been set.
func (o *QueueAutoscaler) HasMaxUpscalePerMinute() bool {
	if o != nil && !IsNil(o.MaxUpscalePerMinute) {
		return true
	}

	return false
}

// SetMaxUpscalePerMinute gets a reference to the given int32 and assigns it to the MaxUpscalePerMinute field.
func (o *QueueAutoscaler) SetMaxUpscalePerMinute(v int32) {
	o.MaxUpscalePerMinute = &v
}

// GetMaxDownscalePerMinute returns the MaxDownscalePerMinute field value if set, zero value otherwise.
func (o *QueueAutoscaler) GetMaxDownscalePerMinute() int32 {
	if o == nil || IsNil(o.MaxDownscalePerMinute) {
		var ret int32
		return ret
	}
	return *o.MaxDownscalePerMinute
}

// GetMaxDownscalePerMinuteOk returns a tuple with the MaxDownscalePerMinute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QueueAutoscaler) GetMaxDownscalePerMinuteOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxDownscalePerMinute) {
		return nil, false
	}
	return o.MaxDownscalePerMinute, true
}

// HasMaxDownscalePerMinute returns a boolean if a field has been set.
func (o *QueueAutoscaler) HasMaxDownscalePerMinute() bool {
	if o != nil && !IsNil(o.MaxDownscalePerMinute) {
		return true
	}

	return false
}

// SetMaxDownscalePerMinute gets a reference to the given int32 and assigns it to the MaxDownscalePerMinute field.
func (o *QueueAutoscaler) SetMaxDownscalePerMinute(v int32) {
	o.MaxDownscalePerMinute = &v
}

func (o QueueAutoscaler) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueueAutoscaler) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["min_replicas"] = o.MinReplicas
	toSerialize["max_replicas"] = o.MaxReplicas
	toSerialize["desired_queue_length"] = o.DesiredQueueLength
	if !IsNil(o.PollingPeriod) {
		toSerialize["polling_period"] = o.PollingPeriod
	}
	if !IsNil(o.MaxUpscalePerMinute) {
		toSerialize["max_upscale_per_minute"] = o.MaxUpscalePerMinute
	}
	if !IsNil(o.MaxDownscalePerMinute) {
		toSerialize["max_downscale_per_minute"] = o.MaxDownscalePerMinute
	}
	return toSerialize, nil
}

func (o *QueueAutoscaler) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"min_replicas",
		"max_replicas",
		"desired_queue_length",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQueueAutoscaler := _QueueAutoscaler{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQueueAutoscaler)

	if err != nil {
		return err
	}

	*o = QueueAutoscaler(varQueueAutoscaler)

	return err
}

type NullableQueueAutoscaler struct {
	value *QueueAutoscaler
	isSet bool
}

func (v NullableQueueAutoscaler) Get() *QueueAutoscaler {
	return v.value
}

func (v *NullableQueueAutoscaler) Set(val *QueueAutoscaler) {
	v.value = val
	v.isSet = true
}

func (v NullableQueueAutoscaler) IsSet() bool {
	return v.isSet
}

func (v *NullableQueueAutoscaler) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueueAutoscaler(val *QueueAutoscaler) *NullableQueueAutoscaler {
	return &NullableQueueAutoscaler{value: val, isSet: true}
}

func (v NullableQueueAutoscaler) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueueAutoscaler) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
