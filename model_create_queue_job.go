/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.5
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the CreateQueueJob type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateQueueJob{}

// CreateQueueJob Represents a request to create a queue job
type CreateQueueJob struct {
	// The job input. May be any valid JSON.
	Input    interface{}            `json:"input"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Webhook  NullableString         `json:"webhook,omitempty"`
}

type _CreateQueueJob CreateQueueJob

// NewCreateQueueJob instantiates a new CreateQueueJob object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateQueueJob(input interface{}) *CreateQueueJob {
	this := CreateQueueJob{}
	this.Input = input
	return &this
}

// NewCreateQueueJobWithDefaults instantiates a new CreateQueueJob object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateQueueJobWithDefaults() *CreateQueueJob {
	this := CreateQueueJob{}
	return &this
}

// GetInput returns the Input field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CreateQueueJob) GetInput() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Input
}

// GetInputOk returns a tuple with the Input field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateQueueJob) GetInputOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Input) {
		return nil, false
	}
	return &o.Input, true
}

// SetInput sets field value
func (o *CreateQueueJob) SetInput(v interface{}) {
	o.Input = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateQueueJob) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateQueueJob) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateQueueJob) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *CreateQueueJob) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetWebhook returns the Webhook field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateQueueJob) GetWebhook() string {
	if o == nil || IsNil(o.Webhook.Get()) {
		var ret string
		return ret
	}
	return *o.Webhook.Get()
}

// GetWebhookOk returns a tuple with the Webhook field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateQueueJob) GetWebhookOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Webhook.Get(), o.Webhook.IsSet()
}

// HasWebhook returns a boolean if a field has been set.
func (o *CreateQueueJob) HasWebhook() bool {
	if o != nil && o.Webhook.IsSet() {
		return true
	}

	return false
}

// SetWebhook gets a reference to the given NullableString and assigns it to the Webhook field.
func (o *CreateQueueJob) SetWebhook(v string) {
	o.Webhook.Set(&v)
}

// SetWebhookNil sets the value for Webhook to be an explicit nil
func (o *CreateQueueJob) SetWebhookNil() {
	o.Webhook.Set(nil)
}

// UnsetWebhook ensures that no value is present for Webhook, not even an explicit nil
func (o *CreateQueueJob) UnsetWebhook() {
	o.Webhook.Unset()
}

func (o CreateQueueJob) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateQueueJob) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Input != nil {
		toSerialize["input"] = o.Input
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Webhook.IsSet() {
		toSerialize["webhook"] = o.Webhook.Get()
	}
	return toSerialize, nil
}

func (o *CreateQueueJob) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"input",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateQueueJob := _CreateQueueJob{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateQueueJob)

	if err != nil {
		return err
	}

	*o = CreateQueueJob(varCreateQueueJob)

	return err
}

type NullableCreateQueueJob struct {
	value *CreateQueueJob
	isSet bool
}

func (v NullableCreateQueueJob) Get() *CreateQueueJob {
	return v.value
}

func (v *NullableCreateQueueJob) Set(val *CreateQueueJob) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateQueueJob) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateQueueJob) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateQueueJob(val *CreateQueueJob) *NullableCreateQueueJob {
	return &NullableCreateQueueJob{value: val, isSet: true}
}

func (v NullableCreateQueueJob) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateQueueJob) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
