/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.5
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"encoding/json"
	"fmt"
)

// ContainerGroupPriority the model 'ContainerGroupPriority'
type ContainerGroupPriority string

// List of ContainerGroupPriority
const (
	CONTAINERGROUPPRIORITY_HIGH   ContainerGroupPriority = "high"
	CONTAINERGROUPPRIORITY_MEDIUM ContainerGroupPriority = "medium"
	CONTAINERGROUPPRIORITY_LOW    ContainerGroupPriority = "low"
	CONTAINERGROUPPRIORITY_BATCH  ContainerGroupPriority = "batch"
)

// All allowed values of ContainerGroupPriority enum
var AllowedContainerGroupPriorityEnumValues = []ContainerGroupPriority{
	"high",
	"medium",
	"low",
	"batch",
}

func (v *ContainerGroupPriority) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ContainerGroupPriority(value)
	for _, existing := range AllowedContainerGroupPriorityEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ContainerGroupPriority", value)
}

// NewContainerGroupPriorityFromValue returns a pointer to a valid ContainerGroupPriority
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewContainerGroupPriorityFromValue(v string) (*ContainerGroupPriority, error) {
	ev := ContainerGroupPriority(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ContainerGroupPriority: valid values are %v", v, AllowedContainerGroupPriorityEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ContainerGroupPriority) IsValid() bool {
	for _, existing := range AllowedContainerGroupPriorityEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ContainerGroupPriority value
func (v ContainerGroupPriority) Ptr() *ContainerGroupPriority {
	return &v
}

type NullableContainerGroupPriority struct {
	value *ContainerGroupPriority
	isSet bool
}

func (v NullableContainerGroupPriority) Get() *ContainerGroupPriority {
	return v.value
}

func (v *NullableContainerGroupPriority) Set(val *ContainerGroupPriority) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerGroupPriority) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerGroupPriority) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerGroupPriority(val *ContainerGroupPriority) *NullableContainerGroupPriority {
	return &NullableContainerGroupPriority{value: val, isSet: true}
}

func (v NullableContainerGroupPriority) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerGroupPriority) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
