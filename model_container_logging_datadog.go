/*
SaladCloud API

The SaladCloud REST API. Please refer to the [SaladCloud API Documentation](https://docs.salad.com/api-reference) for more details.

API version: 0.9.0-alpha.5
Contact: cloud@salad.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package saladclient

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the ContainerLoggingDatadog type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContainerLoggingDatadog{}

// ContainerLoggingDatadog struct for ContainerLoggingDatadog
type ContainerLoggingDatadog struct {
	Host   string             `json:"host"`
	ApiKey string             `json:"api_key"`
	Tags   []HttpHeadersInner `json:"tags,omitempty"`
}

type _ContainerLoggingDatadog ContainerLoggingDatadog

// NewContainerLoggingDatadog instantiates a new ContainerLoggingDatadog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContainerLoggingDatadog(host string, apiKey string) *ContainerLoggingDatadog {
	this := ContainerLoggingDatadog{}
	this.Host = host
	this.ApiKey = apiKey
	return &this
}

// NewContainerLoggingDatadogWithDefaults instantiates a new ContainerLoggingDatadog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContainerLoggingDatadogWithDefaults() *ContainerLoggingDatadog {
	this := ContainerLoggingDatadog{}
	return &this
}

// GetHost returns the Host field value
func (o *ContainerLoggingDatadog) GetHost() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Host
}

// GetHostOk returns a tuple with the Host field value
// and a boolean to check if the value has been set.
func (o *ContainerLoggingDatadog) GetHostOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Host, true
}

// SetHost sets field value
func (o *ContainerLoggingDatadog) SetHost(v string) {
	o.Host = v
}

// GetApiKey returns the ApiKey field value
func (o *ContainerLoggingDatadog) GetApiKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiKey
}

// GetApiKeyOk returns a tuple with the ApiKey field value
// and a boolean to check if the value has been set.
func (o *ContainerLoggingDatadog) GetApiKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiKey, true
}

// SetApiKey sets field value
func (o *ContainerLoggingDatadog) SetApiKey(v string) {
	o.ApiKey = v
}

// GetTags returns the Tags field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ContainerLoggingDatadog) GetTags() []HttpHeadersInner {
	if o == nil {
		var ret []HttpHeadersInner
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ContainerLoggingDatadog) GetTagsOk() ([]HttpHeadersInner, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ContainerLoggingDatadog) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []HttpHeadersInner and assigns it to the Tags field.
func (o *ContainerLoggingDatadog) SetTags(v []HttpHeadersInner) {
	o.Tags = v
}

func (o ContainerLoggingDatadog) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContainerLoggingDatadog) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["host"] = o.Host
	toSerialize["api_key"] = o.ApiKey
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

func (o *ContainerLoggingDatadog) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"host",
		"api_key",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varContainerLoggingDatadog := _ContainerLoggingDatadog{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varContainerLoggingDatadog)

	if err != nil {
		return err
	}

	*o = ContainerLoggingDatadog(varContainerLoggingDatadog)

	return err
}

type NullableContainerLoggingDatadog struct {
	value *ContainerLoggingDatadog
	isSet bool
}

func (v NullableContainerLoggingDatadog) Get() *ContainerLoggingDatadog {
	return v.value
}

func (v *NullableContainerLoggingDatadog) Set(val *ContainerLoggingDatadog) {
	v.value = val
	v.isSet = true
}

func (v NullableContainerLoggingDatadog) IsSet() bool {
	return v.isSet
}

func (v *NullableContainerLoggingDatadog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContainerLoggingDatadog(val *ContainerLoggingDatadog) *NullableContainerLoggingDatadog {
	return &NullableContainerLoggingDatadog{value: val, isSet: true}
}

func (v NullableContainerLoggingDatadog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContainerLoggingDatadog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
